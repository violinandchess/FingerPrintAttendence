/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FrontEndUI;

import Shared.UploadTask;
import ServiceLayer.StoredAttendenceFileService;
import java.awt.Color;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.File;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Vibavi
 */
public class FloorAssistantUI extends javax.swing.JFrame implements PropertyChangeListener {

    private ImageIcon img = new ImageIcon("D:\\FingerPrintAttendence\\FingerPrintAttendence\\FingerPrintAttendeceProject\\src\\Resources\\attendance-icon.png");
    private static final Logger LOGGER = Logger.getLogger(FloorAssistantUI.class.getName());
    private StoredAttendenceFileService storedfileService = new StoredAttendenceFileService();
    public static String UserType = "";

    /**
     * Creates new form FloorAssistantUI
     */
    public FloorAssistantUI() {

        initComponents();
        uploadprogrss.setForeground(Color.green);
        uploadprogrss.setBackground(Color.green);
        this.setLocationRelativeTo(null);
        fileexisterror.setVisible(false);
        uploadprogrss.setVisible(false);

    }

    public String check_monday() {

        if (txtAddingDateStart.getDate() != null) {
            Calendar cal = Calendar.getInstance();
            cal.setTime(txtAddingDateStart.getDate());
            boolean monday = cal.get(Calendar.DAY_OF_WEEK) == Calendar.MONDAY;
            if (monday) {
                return "monday";
            } else {
                return "" + cal.get(Calendar.DAY_OF_WEEK);
            }
        }

        return "";
    }

    public String check_sunday() {

        if (txtAddingDateEnd.getDate() != null) {
            Calendar cal = Calendar.getInstance();
            cal.setTime(txtAddingDateEnd.getDate());
            boolean monday = cal.get(Calendar.DAY_OF_WEEK) == Calendar.SUNDAY;
            if (monday) {
                return "sunday";
            } else {
                return "" + cal.get(Calendar.DAY_OF_WEEK);
            }
        }

        return "";
    }

    public boolean isempty() {

        if (txtUpload.getText().toString().isEmpty()) {
            return false;
        }
        return true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Date = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnSubmit = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        txtUpload = new javax.swing.JTextField();
        btnbrowse = new javax.swing.JButton();
        txtAddingDateEnd = new com.toedter.calendar.JDateChooser();
        uploadprogrss = new javax.swing.JProgressBar();
        fileexisterror = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtAddingDateStart = new com.toedter.calendar.JDateChooser();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Floor Assistant");
        setIconImage(img.getImage());
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        Date.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Date.setText("Week Ending Sunday  Date");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Upload");

        btnSubmit.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        btnClear.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnbrowse.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnbrowse.setText("Browse");
        btnbrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbrowseActionPerformed(evt);
            }
        });

        txtAddingDateEnd.setBackground(new java.awt.Color(0, 153, 255));

        fileexisterror.setForeground(new java.awt.Color(255, 0, 0));
        fileexisterror.setText("File Already Uploaded for this Week");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Week Starting Monday Date");

        jButton3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton3.setText("Back");
        jButton3.setToolTipText("");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(546, 546, 546))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(Date)
                            .addComponent(jLabel5))
                        .addGap(59, 59, 59)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(fileexisterror, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtUpload, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtAddingDateEnd, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtAddingDateStart, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, Short.MAX_VALUE)
                                .addComponent(btnbrowse, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(50, 50, 50)))))
                .addContainerGap(49, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addComponent(uploadprogrss, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtAddingDateStart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtAddingDateEnd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Date))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUpload, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnbrowse, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addComponent(fileexisterror)
                .addGap(33, 33, 33)
                .addComponent(uploadprogrss, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        String check = check_monday();
        System.out.println(check);
        String check1 = check_sunday();
        System.out.println(check1);
        boolean a = isempty();
        System.out.println("" + a);

        if (a && check == "monday" && check1 == "sunday") {
            if (!txtUpload.getText().isEmpty()) {
                if (txtAddingDateEnd.getDate() != null) {
                    String startingDate, endingDate;
                    DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
                    startingDate = df.format(txtAddingDateStart.getDate());
                    endingDate = df.format(txtAddingDateEnd.getDate());
                    Calendar cal = Calendar.getInstance();
                    cal.setTime(txtAddingDateStart.getDate());
                    boolean monday = cal.get(Calendar.DAY_OF_WEEK) == Calendar.MONDAY;
                    cal.setTime(txtAddingDateEnd.getDate());
                    boolean sunday = cal.get(Calendar.DAY_OF_WEEK) == Calendar.SUNDAY;
                    if (txtAddingDateStart.getDate().compareTo(txtAddingDateEnd.getDate()) > 0) {
                        JOptionPane.showMessageDialog(null, "Starting date is Greater than Ending Date", "Date Error",
                                JOptionPane.ERROR_MESSAGE);

                    } else if (!monday) {
                        JOptionPane.showMessageDialog(null, "Starting date is not a Monday date", "Date Error",
                                JOptionPane.ERROR_MESSAGE);
                    } else if (!sunday) {
                        JOptionPane.showMessageDialog(null, "Ending date is not a Sunday date", "Date Error",
                                JOptionPane.ERROR_MESSAGE);
                    } else {

                        boolean isMultipleUpload = storedfileService.CheckMultipleFiles(startingDate, endingDate);
                        if (isMultipleUpload) {
                            JOptionPane.showMessageDialog(null, "File Has Already Uploaded for this Week", "Already Uploaded",
                                    JOptionPane.ERROR_MESSAGE);

                            fileexisterror.setVisible(true);

                        } else {
                            fileexisterror.setVisible(false);
                            fileexisterror.setVisible(false);

                            uploadprogrss.setVisible(true);

                            ///Upload file
                            String host = "172.18.20.210";
                            int port = 21;
                            String username = "ftpattend";
                            String password = "Admin@123";
                            String uploadPath = "AttendenceFiles";
                            String filePath = "\\home\\ftpattend\\";

                            File uploadFile = new File(txtUpload.getText());

                            uploadprogrss.setValue(0);
                            UploadTask task = new UploadTask(host, port, username, password,
                                    uploadPath, uploadFile, startingDate, endingDate);
                            task.addPropertyChangeListener(this);
                            task.execute();
                        }
                    }

                } else {
                    JOptionPane.showMessageDialog(null, "Please  Select a Date", "Select a Date",
                            JOptionPane.ERROR_MESSAGE);

                }
            } else {

                JOptionPane.showMessageDialog(null, "Please  Select csv File by Clicking Browse button", "Select a File",
                        JOptionPane.ERROR_MESSAGE);

            }
        } else {
            JOptionPane.showMessageDialog(null, "Form Fields Error ", "Error", JOptionPane.ERROR_MESSAGE);
            LOGGER.log(Level.INFO, "Form_Fields_Exception", "Floor_Assistant");

        }
    }//GEN-LAST:event_btnSubmitActionPerformed

    public void propertyChange(PropertyChangeEvent evt) {
        if ("progress" == evt.getPropertyName()) {
            int progress = (Integer) evt.getNewValue();
            uploadprogrss.setValue(progress);
        }
    }
    private void btnbrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbrowseActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setAcceptAllFileFilterUsed(false);
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Comma Separated Value File(CSV)", "csv");
        fileChooser.addChoosableFileFilter(filter);
        String filePath;
        String sp;
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            try {
                filePath = file.getPath();

                txtUpload.setText(filePath);

            } catch (Exception ex) {
                System.out.println("problem accessing file" + file.getAbsolutePath());
            }
        } else {
            System.out.println("File access cancelled by user.");
        }

    }//GEN-LAST:event_btnbrowseActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        uploadprogrss.setValue(0);
        txtAddingDateEnd.setDate(null);
        uploadprogrss.setVisible(false);
    }//GEN-LAST:event_btnClearActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        Login s = new Login();
        s.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FloorAssistantUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FloorAssistantUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FloorAssistantUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FloorAssistantUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FloorAssistantUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Date;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JButton btnbrowse;
    private javax.swing.JLabel fileexisterror;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private com.toedter.calendar.JDateChooser txtAddingDateEnd;
    private com.toedter.calendar.JDateChooser txtAddingDateStart;
    private javax.swing.JTextField txtUpload;
    private javax.swing.JProgressBar uploadprogrss;
    // End of variables declaration//GEN-END:variables
}
